[{"name":"app.R","content":"library(shiny)\r\nlibrary(tidyverse)\r\nlibrary(gridExtra)\r\n\r\nrange = 6\r\nexpd = 0.005\r\n\r\n# Define UI for application that draws a histogram\r\nui <- fluidPage(\r\n\r\n    # Application title\r\n    titlePanel(\"Normal CDF, PDF, & inverse CDF\"),\r\n\r\n    # Sidebar \r\n    sidebarLayout(\r\n      inputPanel(\r\n        sliderInput(\"mu\", label=\"Mean\",min=-range,max=range,value=0,step=0.1),\r\n        sliderInput(\"sigma2\", label=\"Variance\",min=.01,max=10,value=1,step=.01),\r\n        sliderInput(\"x\", label=\"x\",min=-range,max=range,value=0,step=0.01)\r\n      ),\r\n\r\n      # Show a plot of the generated distribution\r\n      mainPanel(\r\n         plotOutput(\"mainPlot\")\r\n      )\r\n    )\r\n)\r\n\r\n# Define server logic required to draw a histogram\r\nserver <- function(input, output) {\r\n  output$mainPlot <- renderPlot({\r\n    g1 <- ggplot()+stat_function(fun=~{dnorm(.x,input$mu,input$sigma2)},n=1001)+\r\n      scale_x_continuous(expand=c(0,0),limits=c(-range,range)) + \r\n      scale_y_continuous(expand=c(expd,expd)) + \r\n      geom_point(aes(x=input$x,y=dnorm(input$x,input$mu,input$sigma2)),color=\"red\",size=4) + \r\n      stat_function(fun=~{dnorm(.x,input$mu,input$sigma2)},n=1001,geom=\"area\",xlim=c(-100,input$x),fill=\"red\",alpha=.5)+\r\n      labs(title=\"Probability density function (PDF)\",x=\"x\",y=\"Density\")\r\n    g2 <- ggplot()+geom_function(fun=~{pnorm(.x,input$mu,input$sigma2)},n=1001)+\r\n      geom_point(aes(x=input$x,y=pnorm(input$x,input$mu,input$sigma2)),color=\"red\",size=4) +\r\n      scale_x_continuous(expand=c(expd,expd),limits=c(-range,range)) + scale_y_continuous(expand=c(expd,0)) + labs(title=\"Cumulative density function (CDF)\",x=\"x\",y=\"Probability\")\r\n    g3 <- ggplot()+geom_function(fun=~{qnorm(.x,input$mu,input$sigma2)},n=1001)+\r\n      geom_point(aes(x=pnorm(input$x,input$mu,input$sigma2),y=input$x),color=\"red\",size=4) +\r\n      scale_x_continuous(expand=c(expd,expd),limits=c(0,1)) + scale_y_continuous(expand=c(expd,expd),limits=c(-range,range)) + labs(title=\"Inverse CDF\",x=\"Probability\",y=\"x\")\r\n          grid.arrange(g1,g2,g3,nrow=1)\r\n    },height=300)\r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)\r\n","type":"text"}]
