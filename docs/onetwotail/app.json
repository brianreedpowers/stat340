[{"name":"app.R","content":"library(shiny)\r\n\r\n# Define UI for application that draws a histogram\r\nui <- fluidPage(\r\n\r\n    # Application title\r\n    titlePanel(\"One Tail vs Two Tail Test Power: n=200, H_0: p=.5\"),\r\n\r\n    # Sidebar with a slider input for number of bins \r\n    sidebarLayout(\r\n        sidebarPanel(\r\n            sliderInput(\"p\",\r\n                        \"True p:\",\r\n                        min = 0,\r\n                        max = 1,\r\n                        value = .5),\r\n            sliderInput(\"alpha\",\r\n                        \"Î±:\",\r\n                        min = 0.001,\r\n                        max = .2,\r\n                        value = .05),\r\n            radioButtons( \r\n              inputId = \"testType\", \r\n              label = \"Test Type\", \r\n              choices = list( \r\n                \"Lower Tail\" = 1, \r\n                \"Two Tail\" = 2, \r\n                \"Right Tail\" = 3 \r\n              ) \r\n            ), \r\n        ),\r\n\r\n        # Show a plot of the generated distribution\r\n        mainPanel(\r\n           plotOutput(\"distPlot\")\r\n        ),\r\n        position = c(\"left\", \"right\"),\r\n        fluid = TRUE\r\n    )\r\n)\r\n\r\n# Define server logic required to draw a histogram\r\nserver <- function(input, output) {\r\n\r\n    output$distPlot <- renderPlot({\r\n      RRl=NA; RRr=NA\r\n      if(input$testType==1) RRl=qbinom(input$alpha,200,.5)/200\r\n      if(input$testType==2) RRl=qbinom(input$alpha/2,200,.5)/200\r\n      if(input$testType==2) RRr=qbinom(1-input$alpha/2,200,.5)/200\r\n      if(input$testType==3) RRr=qbinom(1-input$alpha,200,.5)/200\r\n      \r\n      par(mfrow=c(2,1),\r\n          mar = c(0,4,1,1) + 0.1)\r\n      x <- seq(0,200); px <- dbinom(x,200,.5);\r\n      plot(y=px, x=(x/200), type=\"s\", col=\"gray\", xaxt=\"n\", ylab=\"probability\")\r\n      x <- seq(0,200); pxA <- dbinom(x,200,input$p);\r\n      if(!is.na(RRl)) polygon(y=c(pxA[x/200<=RRl],0), x=c((x[x/200<=RRl]/200),RRl)+.0025, col=\"pink\", border=NA)\r\n      if(!is.na(RRr)) polygon(y=c(pxA[x/200>=RRr],0), x=c((x[x/200>=RRr]/200),RRr)+.0025, col=\"pink\", border=NA)\r\n      lines(y=pxA, x=(x/200), type=\"s\")\r\n      abline(v=c(RRl,RRr), col=\"red\")\r\n      text(x=.5, y=dbinom(100,200,.5), \"p-hat (H0)\", col=\"gray\", pos=1)\r\n      text(x=input$p, y=dbinom(100,200,.5)*.85, \"p-hat (true)\", col=\"black\", pos=1)\r\n      if(!is.na(RRl)) text(x=RRl, y=dbinom(100,200,.5)/3, pos=2, \"Rejection Region\")\r\n      if(!is.na(RRr)) text(x=RRr, y=dbinom(100,200,.5)/3, pos=4, \"Rejection Region\")\r\n      \r\n      \r\n      pAlt <- seq(0,1,by=.005)\r\n      RR <- rep(0, length(pAlt))\r\n      power <- 0\r\n      if(input$testType<=2){\r\n        RR <- pbinom(RRl*200, size=200,p=pAlt)\r\n        power <- pbinom(RRl*200, size=200, p=input$p)\r\n      } \r\n      if (input$testType>=2){\r\n        RR <- RR + pbinom(RRr*200-1, size=200,p=pAlt, lower.tail=F) \r\n        power <- power + pbinom(RRr*200-1, size=200, p=input$p, lower.tail=F)\r\n      }\r\n\r\n    \r\n      plot(x=pAlt, y=RR, type=\"l\", ylab=\"rejection rate\", xlab=\"true p\", ylim=c(0,1))\r\n      abline(h=input$alpha, col=\"red\",lty=2)\r\n      points(x=input$p, y=power)\r\n      align <- 1\r\n      if(power<.5) align <-3\r\n      text(x=input$p, y=power, paste0(\"Power=\",round(power,3)),pos=align)\r\n    })\r\n}\r\n\r\n# Run the application \r\nshinyApp(ui = ui, server = server)\r\n","type":"text"}]
